# Generated by protoc_gen_nim. Do not edit!

import intsets

import nimpb/nimpb

import descriptor_pb

type
    google_protobuf_compiler_Version* = ref google_protobuf_compiler_VersionObj
    google_protobuf_compiler_VersionObj* = object of RootObj
        hasField: IntSet
        major: int32
        minor: int32
        patch: int32
        suffix: string
    google_protobuf_compiler_CodeGeneratorRequest* = ref google_protobuf_compiler_CodeGeneratorRequestObj
    google_protobuf_compiler_CodeGeneratorRequestObj* = object of RootObj
        hasField: IntSet
        file_to_generate: seq[string]
        parameter: string
        proto_file: seq[google_protobuf_FileDescriptorProto]
        compiler_version: google_protobuf_compiler_Version
    google_protobuf_compiler_CodeGeneratorResponse* = ref google_protobuf_compiler_CodeGeneratorResponseObj
    google_protobuf_compiler_CodeGeneratorResponseObj* = object of RootObj
        hasField: IntSet
        error: string
        file: seq[google_protobuf_compiler_CodeGeneratorResponse_File]
    google_protobuf_compiler_CodeGeneratorResponse_File* = ref google_protobuf_compiler_CodeGeneratorResponse_FileObj
    google_protobuf_compiler_CodeGeneratorResponse_FileObj* = object of RootObj
        hasField: IntSet
        name: string
        insertion_point: string
        content: string

proc newgoogle_protobuf_compiler_Version*(): google_protobuf_compiler_Version
proc writegoogle_protobuf_compiler_Version*(stream: ProtobufStream, message: google_protobuf_compiler_Version)
proc readgoogle_protobuf_compiler_Version*(stream: ProtobufStream): google_protobuf_compiler_Version
proc sizeOfgoogle_protobuf_compiler_Version*(message: google_protobuf_compiler_Version): uint64

proc newgoogle_protobuf_compiler_CodeGeneratorRequest*(): google_protobuf_compiler_CodeGeneratorRequest
proc writegoogle_protobuf_compiler_CodeGeneratorRequest*(stream: ProtobufStream, message: google_protobuf_compiler_CodeGeneratorRequest)
proc readgoogle_protobuf_compiler_CodeGeneratorRequest*(stream: ProtobufStream): google_protobuf_compiler_CodeGeneratorRequest
proc sizeOfgoogle_protobuf_compiler_CodeGeneratorRequest*(message: google_protobuf_compiler_CodeGeneratorRequest): uint64

proc newgoogle_protobuf_compiler_CodeGeneratorResponse_File*(): google_protobuf_compiler_CodeGeneratorResponse_File
proc writegoogle_protobuf_compiler_CodeGeneratorResponse_File*(stream: ProtobufStream, message: google_protobuf_compiler_CodeGeneratorResponse_File)
proc readgoogle_protobuf_compiler_CodeGeneratorResponse_File*(stream: ProtobufStream): google_protobuf_compiler_CodeGeneratorResponse_File
proc sizeOfgoogle_protobuf_compiler_CodeGeneratorResponse_File*(message: google_protobuf_compiler_CodeGeneratorResponse_File): uint64

proc newgoogle_protobuf_compiler_CodeGeneratorResponse*(): google_protobuf_compiler_CodeGeneratorResponse
proc writegoogle_protobuf_compiler_CodeGeneratorResponse*(stream: ProtobufStream, message: google_protobuf_compiler_CodeGeneratorResponse)
proc readgoogle_protobuf_compiler_CodeGeneratorResponse*(stream: ProtobufStream): google_protobuf_compiler_CodeGeneratorResponse
proc sizeOfgoogle_protobuf_compiler_CodeGeneratorResponse*(message: google_protobuf_compiler_CodeGeneratorResponse): uint64

proc newgoogle_protobuf_compiler_Version*(): google_protobuf_compiler_Version =
    new(result)
    result.hasField = initIntSet()
    result.major = 0
    result.minor = 0
    result.patch = 0
    result.suffix = ""

proc clearmajor*(message: google_protobuf_compiler_Version) =
    message.major = 0
    excl(message.hasField, [1])

proc hasmajor*(message: google_protobuf_compiler_Version): bool =
    result = contains(message.hasField, 1)

proc setmajor*(message: google_protobuf_compiler_Version, value: int32) =
    message.major = value
    incl(message.hasField, 1)

proc major*(message: google_protobuf_compiler_Version): int32 {.inline.} =
    message.major

proc `major=`*(message: google_protobuf_compiler_Version, value: int32) {.inline.} =
    setmajor(message, value)

proc clearminor*(message: google_protobuf_compiler_Version) =
    message.minor = 0
    excl(message.hasField, [2])

proc hasminor*(message: google_protobuf_compiler_Version): bool =
    result = contains(message.hasField, 2)

proc setminor*(message: google_protobuf_compiler_Version, value: int32) =
    message.minor = value
    incl(message.hasField, 2)

proc minor*(message: google_protobuf_compiler_Version): int32 {.inline.} =
    message.minor

proc `minor=`*(message: google_protobuf_compiler_Version, value: int32) {.inline.} =
    setminor(message, value)

proc clearpatch*(message: google_protobuf_compiler_Version) =
    message.patch = 0
    excl(message.hasField, [3])

proc haspatch*(message: google_protobuf_compiler_Version): bool =
    result = contains(message.hasField, 3)

proc setpatch*(message: google_protobuf_compiler_Version, value: int32) =
    message.patch = value
    incl(message.hasField, 3)

proc patch*(message: google_protobuf_compiler_Version): int32 {.inline.} =
    message.patch

proc `patch=`*(message: google_protobuf_compiler_Version, value: int32) {.inline.} =
    setpatch(message, value)

proc clearsuffix*(message: google_protobuf_compiler_Version) =
    message.suffix = ""
    excl(message.hasField, [4])

proc hassuffix*(message: google_protobuf_compiler_Version): bool =
    result = contains(message.hasField, 4)

proc setsuffix*(message: google_protobuf_compiler_Version, value: string) =
    message.suffix = value
    incl(message.hasField, 4)

proc suffix*(message: google_protobuf_compiler_Version): string {.inline.} =
    message.suffix

proc `suffix=`*(message: google_protobuf_compiler_Version, value: string) {.inline.} =
    setsuffix(message, value)

proc sizeOfgoogle_protobuf_compiler_Version*(message: google_protobuf_compiler_Version): uint64 =
    if hasmajor(message):
        result = result + sizeOfTag(1, WireType.Varint)
        result = result + sizeOfInt32(message.major)
    if hasminor(message):
        result = result + sizeOfTag(2, WireType.Varint)
        result = result + sizeOfInt32(message.minor)
    if haspatch(message):
        result = result + sizeOfTag(3, WireType.Varint)
        result = result + sizeOfInt32(message.patch)
    if hassuffix(message):
        result = result + sizeOfTag(4, WireType.LengthDelimited)
        result = result + sizeOfString(message.suffix)

proc writegoogle_protobuf_compiler_Version*(stream: ProtobufStream, message: google_protobuf_compiler_Version) =
    if hasmajor(message):
        writeInt32(stream, message.major, 1)
    if hasminor(message):
        writeInt32(stream, message.minor, 2)
    if haspatch(message):
        writeInt32(stream, message.patch, 3)
    if hassuffix(message):
        writeString(stream, message.suffix, 4)

proc readgoogle_protobuf_compiler_Version*(stream: ProtobufStream): google_protobuf_compiler_Version =
    result = newgoogle_protobuf_compiler_Version()
    while not atEnd(stream):
        let
            tag = readTag(stream)
            wireType = wireType(tag)
        case fieldNumber(tag)
        of 0:
            raise newException(InvalidFieldNumberError, "Invalid field number: 0")
        of 1:
            expectWireType(wireType, WireType.Varint)
            setmajor(result, readInt32(stream))
        of 2:
            expectWireType(wireType, WireType.Varint)
            setminor(result, readInt32(stream))
        of 3:
            expectWireType(wireType, WireType.Varint)
            setpatch(result, readInt32(stream))
        of 4:
            expectWireType(wireType, WireType.LengthDelimited)
            setsuffix(result, readString(stream))
        else: skipField(stream, wireType)

proc serialize*(message: google_protobuf_compiler_Version): string =
    let
        ss = newStringStream()
        pbs = newProtobufStream(ss)
    writegoogle_protobuf_compiler_Version(pbs, message)
    result = ss.data

proc newgoogle_protobuf_compiler_Version*(data: string): google_protobuf_compiler_Version =
    let
        ss = newStringStream(data)
        pbs = newProtobufStream(ss)
    result = readgoogle_protobuf_compiler_Version(pbs)


proc newgoogle_protobuf_compiler_CodeGeneratorRequest*(): google_protobuf_compiler_CodeGeneratorRequest =
    new(result)
    result.hasField = initIntSet()
    result.file_to_generate = @[]
    result.parameter = ""
    result.proto_file = @[]
    result.compiler_version = nil

proc clearfile_to_generate*(message: google_protobuf_compiler_CodeGeneratorRequest) =
    message.file_to_generate = @[]
    excl(message.hasField, [1])

proc hasfile_to_generate*(message: google_protobuf_compiler_CodeGeneratorRequest): bool =
    result = contains(message.hasField, 1) or (len(message.file_to_generate) > 0)

proc setfile_to_generate*(message: google_protobuf_compiler_CodeGeneratorRequest, value: seq[string]) =
    message.file_to_generate = value
    incl(message.hasField, 1)

proc addfile_to_generate*(message: google_protobuf_compiler_CodeGeneratorRequest, value: string) =
    add(message.file_to_generate, value)
    incl(message.hasField, 1)

proc file_to_generate*(message: google_protobuf_compiler_CodeGeneratorRequest): seq[string] {.inline.} =
    message.file_to_generate

proc `file_to_generate=`*(message: google_protobuf_compiler_CodeGeneratorRequest, value: seq[string]) {.inline.} =
    setfile_to_generate(message, value)

proc clearparameter*(message: google_protobuf_compiler_CodeGeneratorRequest) =
    message.parameter = ""
    excl(message.hasField, [2])

proc hasparameter*(message: google_protobuf_compiler_CodeGeneratorRequest): bool =
    result = contains(message.hasField, 2)

proc setparameter*(message: google_protobuf_compiler_CodeGeneratorRequest, value: string) =
    message.parameter = value
    incl(message.hasField, 2)

proc parameter*(message: google_protobuf_compiler_CodeGeneratorRequest): string {.inline.} =
    message.parameter

proc `parameter=`*(message: google_protobuf_compiler_CodeGeneratorRequest, value: string) {.inline.} =
    setparameter(message, value)

proc clearproto_file*(message: google_protobuf_compiler_CodeGeneratorRequest) =
    message.proto_file = @[]
    excl(message.hasField, [15])

proc hasproto_file*(message: google_protobuf_compiler_CodeGeneratorRequest): bool =
    result = contains(message.hasField, 15) or (len(message.proto_file) > 0)

proc setproto_file*(message: google_protobuf_compiler_CodeGeneratorRequest, value: seq[google_protobuf_FileDescriptorProto]) =
    message.proto_file = value
    incl(message.hasField, 15)

proc addproto_file*(message: google_protobuf_compiler_CodeGeneratorRequest, value: google_protobuf_FileDescriptorProto) =
    add(message.proto_file, value)
    incl(message.hasField, 15)

proc proto_file*(message: google_protobuf_compiler_CodeGeneratorRequest): seq[google_protobuf_FileDescriptorProto] {.inline.} =
    message.proto_file

proc `proto_file=`*(message: google_protobuf_compiler_CodeGeneratorRequest, value: seq[google_protobuf_FileDescriptorProto]) {.inline.} =
    setproto_file(message, value)

proc clearcompiler_version*(message: google_protobuf_compiler_CodeGeneratorRequest) =
    message.compiler_version = nil
    excl(message.hasField, [3])

proc hascompiler_version*(message: google_protobuf_compiler_CodeGeneratorRequest): bool =
    result = contains(message.hasField, 3)

proc setcompiler_version*(message: google_protobuf_compiler_CodeGeneratorRequest, value: google_protobuf_compiler_Version) =
    message.compiler_version = value
    incl(message.hasField, 3)

proc compiler_version*(message: google_protobuf_compiler_CodeGeneratorRequest): google_protobuf_compiler_Version {.inline.} =
    message.compiler_version

proc `compiler_version=`*(message: google_protobuf_compiler_CodeGeneratorRequest, value: google_protobuf_compiler_Version) {.inline.} =
    setcompiler_version(message, value)

proc sizeOfgoogle_protobuf_compiler_CodeGeneratorRequest*(message: google_protobuf_compiler_CodeGeneratorRequest): uint64 =
    for value in message.file_to_generate:
        result = result + sizeOfTag(1, WireType.LengthDelimited)
        result = result + sizeOfString(value)
    if hasparameter(message):
        result = result + sizeOfTag(2, WireType.LengthDelimited)
        result = result + sizeOfString(message.parameter)
    for value in message.proto_file:
        result = result + sizeOfTag(15, WireType.LengthDelimited)
        result = result + sizeOfLengthDelimited(sizeOfgoogle_protobuf_FileDescriptorProto(value))
    if hascompiler_version(message):
        result = result + sizeOfTag(3, WireType.LengthDelimited)
        result = result + sizeOfLengthDelimited(sizeOfgoogle_protobuf_compiler_Version(message.compiler_version))

proc writegoogle_protobuf_compiler_CodeGeneratorRequest*(stream: ProtobufStream, message: google_protobuf_compiler_CodeGeneratorRequest) =
    for value in message.file_to_generate:
        writeString(stream, value, 1)
    if hasparameter(message):
        writeString(stream, message.parameter, 2)
    for value in message.proto_file:
        writeMessage(stream, value, 15)
    if hascompiler_version(message):
        writeMessage(stream, message.compiler_version, 3)

proc readgoogle_protobuf_compiler_CodeGeneratorRequest*(stream: ProtobufStream): google_protobuf_compiler_CodeGeneratorRequest =
    result = newgoogle_protobuf_compiler_CodeGeneratorRequest()
    while not atEnd(stream):
        let
            tag = readTag(stream)
            wireType = wireType(tag)
        case fieldNumber(tag)
        of 0:
            raise newException(InvalidFieldNumberError, "Invalid field number: 0")
        of 1:
            expectWireType(wireType, WireType.LengthDelimited)
            addfile_to_generate(result, readString(stream))
        of 2:
            expectWireType(wireType, WireType.LengthDelimited)
            setparameter(result, readString(stream))
        of 15:
            expectWireType(wireType, WireType.LengthDelimited)
            let
                size = readVarint(stream)
                data = safeReadStr(stream, int(size))
                pbs = newProtobufStream(newStringStream(data))
            addproto_file(result, readgoogle_protobuf_FileDescriptorProto(pbs))
        of 3:
            expectWireType(wireType, WireType.LengthDelimited)
            let
                size = readVarint(stream)
                data = safeReadStr(stream, int(size))
                pbs = newProtobufStream(newStringStream(data))
            setcompiler_version(result, readgoogle_protobuf_compiler_Version(pbs))
        else: skipField(stream, wireType)

proc serialize*(message: google_protobuf_compiler_CodeGeneratorRequest): string =
    let
        ss = newStringStream()
        pbs = newProtobufStream(ss)
    writegoogle_protobuf_compiler_CodeGeneratorRequest(pbs, message)
    result = ss.data

proc newgoogle_protobuf_compiler_CodeGeneratorRequest*(data: string): google_protobuf_compiler_CodeGeneratorRequest =
    let
        ss = newStringStream(data)
        pbs = newProtobufStream(ss)
    result = readgoogle_protobuf_compiler_CodeGeneratorRequest(pbs)


proc newgoogle_protobuf_compiler_CodeGeneratorResponse_File*(): google_protobuf_compiler_CodeGeneratorResponse_File =
    new(result)
    result.hasField = initIntSet()
    result.name = ""
    result.insertion_point = ""
    result.content = ""

proc clearname*(message: google_protobuf_compiler_CodeGeneratorResponse_File) =
    message.name = ""
    excl(message.hasField, [1])

proc hasname*(message: google_protobuf_compiler_CodeGeneratorResponse_File): bool =
    result = contains(message.hasField, 1)

proc setname*(message: google_protobuf_compiler_CodeGeneratorResponse_File, value: string) =
    message.name = value
    incl(message.hasField, 1)

proc name*(message: google_protobuf_compiler_CodeGeneratorResponse_File): string {.inline.} =
    message.name

proc `name=`*(message: google_protobuf_compiler_CodeGeneratorResponse_File, value: string) {.inline.} =
    setname(message, value)

proc clearinsertion_point*(message: google_protobuf_compiler_CodeGeneratorResponse_File) =
    message.insertion_point = ""
    excl(message.hasField, [2])

proc hasinsertion_point*(message: google_protobuf_compiler_CodeGeneratorResponse_File): bool =
    result = contains(message.hasField, 2)

proc setinsertion_point*(message: google_protobuf_compiler_CodeGeneratorResponse_File, value: string) =
    message.insertion_point = value
    incl(message.hasField, 2)

proc insertion_point*(message: google_protobuf_compiler_CodeGeneratorResponse_File): string {.inline.} =
    message.insertion_point

proc `insertion_point=`*(message: google_protobuf_compiler_CodeGeneratorResponse_File, value: string) {.inline.} =
    setinsertion_point(message, value)

proc clearcontent*(message: google_protobuf_compiler_CodeGeneratorResponse_File) =
    message.content = ""
    excl(message.hasField, [15])

proc hascontent*(message: google_protobuf_compiler_CodeGeneratorResponse_File): bool =
    result = contains(message.hasField, 15)

proc setcontent*(message: google_protobuf_compiler_CodeGeneratorResponse_File, value: string) =
    message.content = value
    incl(message.hasField, 15)

proc content*(message: google_protobuf_compiler_CodeGeneratorResponse_File): string {.inline.} =
    message.content

proc `content=`*(message: google_protobuf_compiler_CodeGeneratorResponse_File, value: string) {.inline.} =
    setcontent(message, value)

proc sizeOfgoogle_protobuf_compiler_CodeGeneratorResponse_File*(message: google_protobuf_compiler_CodeGeneratorResponse_File): uint64 =
    if hasname(message):
        result = result + sizeOfTag(1, WireType.LengthDelimited)
        result = result + sizeOfString(message.name)
    if hasinsertion_point(message):
        result = result + sizeOfTag(2, WireType.LengthDelimited)
        result = result + sizeOfString(message.insertion_point)
    if hascontent(message):
        result = result + sizeOfTag(15, WireType.LengthDelimited)
        result = result + sizeOfString(message.content)

proc writegoogle_protobuf_compiler_CodeGeneratorResponse_File*(stream: ProtobufStream, message: google_protobuf_compiler_CodeGeneratorResponse_File) =
    if hasname(message):
        writeString(stream, message.name, 1)
    if hasinsertion_point(message):
        writeString(stream, message.insertion_point, 2)
    if hascontent(message):
        writeString(stream, message.content, 15)

proc readgoogle_protobuf_compiler_CodeGeneratorResponse_File*(stream: ProtobufStream): google_protobuf_compiler_CodeGeneratorResponse_File =
    result = newgoogle_protobuf_compiler_CodeGeneratorResponse_File()
    while not atEnd(stream):
        let
            tag = readTag(stream)
            wireType = wireType(tag)
        case fieldNumber(tag)
        of 0:
            raise newException(InvalidFieldNumberError, "Invalid field number: 0")
        of 1:
            expectWireType(wireType, WireType.LengthDelimited)
            setname(result, readString(stream))
        of 2:
            expectWireType(wireType, WireType.LengthDelimited)
            setinsertion_point(result, readString(stream))
        of 15:
            expectWireType(wireType, WireType.LengthDelimited)
            setcontent(result, readString(stream))
        else: skipField(stream, wireType)

proc serialize*(message: google_protobuf_compiler_CodeGeneratorResponse_File): string =
    let
        ss = newStringStream()
        pbs = newProtobufStream(ss)
    writegoogle_protobuf_compiler_CodeGeneratorResponse_File(pbs, message)
    result = ss.data

proc newgoogle_protobuf_compiler_CodeGeneratorResponse_File*(data: string): google_protobuf_compiler_CodeGeneratorResponse_File =
    let
        ss = newStringStream(data)
        pbs = newProtobufStream(ss)
    result = readgoogle_protobuf_compiler_CodeGeneratorResponse_File(pbs)


proc newgoogle_protobuf_compiler_CodeGeneratorResponse*(): google_protobuf_compiler_CodeGeneratorResponse =
    new(result)
    result.hasField = initIntSet()
    result.error = ""
    result.file = @[]

proc clearerror*(message: google_protobuf_compiler_CodeGeneratorResponse) =
    message.error = ""
    excl(message.hasField, [1])

proc haserror*(message: google_protobuf_compiler_CodeGeneratorResponse): bool =
    result = contains(message.hasField, 1)

proc seterror*(message: google_protobuf_compiler_CodeGeneratorResponse, value: string) =
    message.error = value
    incl(message.hasField, 1)

proc error*(message: google_protobuf_compiler_CodeGeneratorResponse): string {.inline.} =
    message.error

proc `error=`*(message: google_protobuf_compiler_CodeGeneratorResponse, value: string) {.inline.} =
    seterror(message, value)

proc clearfile*(message: google_protobuf_compiler_CodeGeneratorResponse) =
    message.file = @[]
    excl(message.hasField, [15])

proc hasfile*(message: google_protobuf_compiler_CodeGeneratorResponse): bool =
    result = contains(message.hasField, 15) or (len(message.file) > 0)

proc setfile*(message: google_protobuf_compiler_CodeGeneratorResponse, value: seq[google_protobuf_compiler_CodeGeneratorResponse_File]) =
    message.file = value
    incl(message.hasField, 15)

proc addfile*(message: google_protobuf_compiler_CodeGeneratorResponse, value: google_protobuf_compiler_CodeGeneratorResponse_File) =
    add(message.file, value)
    incl(message.hasField, 15)

proc file*(message: google_protobuf_compiler_CodeGeneratorResponse): seq[google_protobuf_compiler_CodeGeneratorResponse_File] {.inline.} =
    message.file

proc `file=`*(message: google_protobuf_compiler_CodeGeneratorResponse, value: seq[google_protobuf_compiler_CodeGeneratorResponse_File]) {.inline.} =
    setfile(message, value)

proc sizeOfgoogle_protobuf_compiler_CodeGeneratorResponse*(message: google_protobuf_compiler_CodeGeneratorResponse): uint64 =
    if haserror(message):
        result = result + sizeOfTag(1, WireType.LengthDelimited)
        result = result + sizeOfString(message.error)
    for value in message.file:
        result = result + sizeOfTag(15, WireType.LengthDelimited)
        result = result + sizeOfLengthDelimited(sizeOfgoogle_protobuf_compiler_CodeGeneratorResponse_File(value))

proc writegoogle_protobuf_compiler_CodeGeneratorResponse*(stream: ProtobufStream, message: google_protobuf_compiler_CodeGeneratorResponse) =
    if haserror(message):
        writeString(stream, message.error, 1)
    for value in message.file:
        writeMessage(stream, value, 15)

proc readgoogle_protobuf_compiler_CodeGeneratorResponse*(stream: ProtobufStream): google_protobuf_compiler_CodeGeneratorResponse =
    result = newgoogle_protobuf_compiler_CodeGeneratorResponse()
    while not atEnd(stream):
        let
            tag = readTag(stream)
            wireType = wireType(tag)
        case fieldNumber(tag)
        of 0:
            raise newException(InvalidFieldNumberError, "Invalid field number: 0")
        of 1:
            expectWireType(wireType, WireType.LengthDelimited)
            seterror(result, readString(stream))
        of 15:
            expectWireType(wireType, WireType.LengthDelimited)
            let
                size = readVarint(stream)
                data = safeReadStr(stream, int(size))
                pbs = newProtobufStream(newStringStream(data))
            addfile(result, readgoogle_protobuf_compiler_CodeGeneratorResponse_File(pbs))
        else: skipField(stream, wireType)

proc serialize*(message: google_protobuf_compiler_CodeGeneratorResponse): string =
    let
        ss = newStringStream()
        pbs = newProtobufStream(ss)
    writegoogle_protobuf_compiler_CodeGeneratorResponse(pbs, message)
    result = ss.data

proc newgoogle_protobuf_compiler_CodeGeneratorResponse*(data: string): google_protobuf_compiler_CodeGeneratorResponse =
    let
        ss = newStringStream(data)
        pbs = newProtobufStream(ss)
    result = readgoogle_protobuf_compiler_CodeGeneratorResponse(pbs)


